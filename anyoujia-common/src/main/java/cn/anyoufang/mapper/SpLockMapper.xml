<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.SpLockMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.SpLock" >
    <id column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="code1" property="code1" jdbcType="VARCHAR" />
    <result column="code2" property="code2" jdbcType="VARCHAR" />
    <result column="active" property="active" jdbcType="BIT" />
    <result column="ver" property="ver" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="INTEGER" />
    <result column="activetime" property="activetime" jdbcType="INTEGER" />
    <result column="card" property="card" jdbcType="VARCHAR" />
    <result column="community" property="community" jdbcType="INTEGER" />
    <result column="p_date" property="pDate" jdbcType="INTEGER" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="sechar1" property="sechar1" jdbcType="INTEGER" />
    <result column="sechar2" property="sechar2" jdbcType="INTEGER" />
    <result column="nos" property="nos" jdbcType="VARCHAR" />
    <result column="pro_key" property="proKey" jdbcType="VARCHAR" />
    <result column="checker" property="checker" jdbcType="VARCHAR" />
    <result column="origin" property="origin" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="combineSelectResultMap" type="cn.anyoufang.entity.selfdefined.LockCombineInfo">
    <!--<id column="sn" property="sn" jdbcType="VARCHAR" />-->
    <result column="sn" property="sn" jdbcType="VARCHAR"/>
    <result column="origin" property="origin" jdbcType="VARCHAR" />
    <result column="p_date" property="producttime" jdbcType="INTEGER" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="code2" property="code2" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sn, code1, code2, active, ver, addtime, activetime, card, community, p_date, color, 
    model, sechar1, sechar2, nos, pro_key, checker, origin
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.SpLockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sp_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sp_lock
    where sn = #{sn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sp_lock
    where sn = #{sn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.SpLockExample" >
    delete from sp_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.SpLock" >
    insert into sp_lock (sn, code1, code2, 
      active, ver, addtime, activetime, 
      card, community, p_date, 
      color, model, sechar1, 
      sechar2, nos, pro_key, 
      checker, origin)
    values (#{sn,jdbcType=VARCHAR}, #{code1,jdbcType=VARCHAR}, #{code2,jdbcType=VARCHAR}, 
      #{active,jdbcType=BIT}, #{ver,jdbcType=VARCHAR}, #{addtime,jdbcType=INTEGER}, #{activetime,jdbcType=INTEGER}, 
      #{card,jdbcType=VARCHAR}, #{community,jdbcType=INTEGER}, #{pDate,jdbcType=INTEGER}, 
      #{color,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{sechar1,jdbcType=INTEGER}, 
      #{sechar2,jdbcType=INTEGER}, #{nos,jdbcType=VARCHAR}, #{proKey,jdbcType=VARCHAR}, 
      #{checker,jdbcType=VARCHAR}, #{origin,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.SpLock" >
    insert into sp_lock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sn != null" >
        sn,
      </if>
      <if test="code1 != null" >
        code1,
      </if>
      <if test="code2 != null" >
        code2,
      </if>
      <if test="active != null" >
        active,
      </if>
      <if test="ver != null" >
        ver,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="activetime != null" >
        activetime,
      </if>
      <if test="card != null" >
        card,
      </if>
      <if test="community != null" >
        community,
      </if>
      <if test="pDate != null" >
        p_date,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="sechar1 != null" >
        sechar1,
      </if>
      <if test="sechar2 != null" >
        sechar2,
      </if>
      <if test="nos != null" >
        nos,
      </if>
      <if test="proKey != null" >
        pro_key,
      </if>
      <if test="checker != null" >
        checker,
      </if>
      <if test="origin != null" >
        origin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="code1 != null" >
        #{code1,jdbcType=VARCHAR},
      </if>
      <if test="code2 != null" >
        #{code2,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        #{active,jdbcType=BIT},
      </if>
      <if test="ver != null" >
        #{ver,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=INTEGER},
      </if>
      <if test="activetime != null" >
        #{activetime,jdbcType=INTEGER},
      </if>
      <if test="card != null" >
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="community != null" >
        #{community,jdbcType=INTEGER},
      </if>
      <if test="pDate != null" >
        #{pDate,jdbcType=INTEGER},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="sechar1 != null" >
        #{sechar1,jdbcType=INTEGER},
      </if>
      <if test="sechar2 != null" >
        #{sechar2,jdbcType=INTEGER},
      </if>
      <if test="nos != null" >
        #{nos,jdbcType=VARCHAR},
      </if>
      <if test="proKey != null" >
        #{proKey,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.SpLockExample" resultType="java.lang.Integer" >
    select count(*) from sp_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sp_lock
    <set >
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.code1 != null" >
        code1 = #{record.code1,jdbcType=VARCHAR},
      </if>
      <if test="record.code2 != null" >
        code2 = #{record.code2,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null" >
        active = #{record.active,jdbcType=BIT},
      </if>
      <if test="record.ver != null" >
        ver = #{record.ver,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=INTEGER},
      </if>
      <if test="record.activetime != null" >
        activetime = #{record.activetime,jdbcType=INTEGER},
      </if>
      <if test="record.card != null" >
        card = #{record.card,jdbcType=VARCHAR},
      </if>
      <if test="record.community != null" >
        community = #{record.community,jdbcType=INTEGER},
      </if>
      <if test="record.pDate != null" >
        p_date = #{record.pDate,jdbcType=INTEGER},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.sechar1 != null" >
        sechar1 = #{record.sechar1,jdbcType=INTEGER},
      </if>
      <if test="record.sechar2 != null" >
        sechar2 = #{record.sechar2,jdbcType=INTEGER},
      </if>
      <if test="record.nos != null" >
        nos = #{record.nos,jdbcType=VARCHAR},
      </if>
      <if test="record.proKey != null" >
        pro_key = #{record.proKey,jdbcType=VARCHAR},
      </if>
      <if test="record.checker != null" >
        checker = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.origin != null" >
        origin = #{record.origin,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sp_lock
    set sn = #{record.sn,jdbcType=VARCHAR},
      code1 = #{record.code1,jdbcType=VARCHAR},
      code2 = #{record.code2,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=BIT},
      ver = #{record.ver,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=INTEGER},
      activetime = #{record.activetime,jdbcType=INTEGER},
      card = #{record.card,jdbcType=VARCHAR},
      community = #{record.community,jdbcType=INTEGER},
      p_date = #{record.pDate,jdbcType=INTEGER},
      color = #{record.color,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      sechar1 = #{record.sechar1,jdbcType=INTEGER},
      sechar2 = #{record.sechar2,jdbcType=INTEGER},
      nos = #{record.nos,jdbcType=VARCHAR},
      pro_key = #{record.proKey,jdbcType=VARCHAR},
      checker = #{record.checker,jdbcType=VARCHAR},
      origin = #{record.origin,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.SpLock" >
    update sp_lock
    <set >
      <if test="code1 != null" >
        code1 = #{code1,jdbcType=VARCHAR},
      </if>
      <if test="code2 != null" >
        code2 = #{code2,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        active = #{active,jdbcType=BIT},
      </if>
      <if test="ver != null" >
        ver = #{ver,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="activetime != null" >
        activetime = #{activetime,jdbcType=INTEGER},
      </if>
      <if test="card != null" >
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="community != null" >
        community = #{community,jdbcType=INTEGER},
      </if>
      <if test="pDate != null" >
        p_date = #{pDate,jdbcType=INTEGER},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="sechar1 != null" >
        sechar1 = #{sechar1,jdbcType=INTEGER},
      </if>
      <if test="sechar2 != null" >
        sechar2 = #{sechar2,jdbcType=INTEGER},
      </if>
      <if test="nos != null" >
        nos = #{nos,jdbcType=VARCHAR},
      </if>
      <if test="proKey != null" >
        pro_key = #{proKey,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        checker = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=VARCHAR},
      </if>
    </set>
    where sn = #{sn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.SpLock" >
    update sp_lock
    set code1 = #{code1,jdbcType=VARCHAR},
      code2 = #{code2,jdbcType=VARCHAR},
      active = #{active,jdbcType=BIT},
      ver = #{ver,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=INTEGER},
      activetime = #{activetime,jdbcType=INTEGER},
      card = #{card,jdbcType=VARCHAR},
      community = #{community,jdbcType=INTEGER},
      p_date = #{pDate,jdbcType=INTEGER},
      color = #{color,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      sechar1 = #{sechar1,jdbcType=INTEGER},
      sechar2 = #{sechar2,jdbcType=INTEGER},
      nos = #{nos,jdbcType=VARCHAR},
      pro_key = #{proKey,jdbcType=VARCHAR},
      checker = #{checker,jdbcType=VARCHAR},
      origin = #{origin,jdbcType=VARCHAR}
    where sn = #{sn,jdbcType=VARCHAR}
  </update>

  <select id="selectLockInfoByCombinetable" resultMap="combineSelectResultMap">
    SELECT sl.model,
    sl.origin,
    sl.color,
    sl.p_date,
    sc.address,
    sc.cname,
    sl.sn,
    sl.pro_key,
    sl.code2
    FROM
    sp_lock sl
    JOIN sp_community sc ON sl.community = sc.cid
    <where>
      <if test="locksns != null and locksns.size()!=0">
        sl.sn in
        <foreach collection="locksns" item="item" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </if>
    </where>
  </select>

  <select id="selectLockInfoByLocksn" resultMap="combineSelectResultMap">
    SELECT sl.model,
    sl.origin,
    sl.color,
    sl.p_date,
    sc.address,
    sc.cname,
    sl.sn,
    sl.code2
    FROM
    sp_lock sl
    JOIN sp_community sc ON sl.community = sc.cid
    WHERE
    sl.sn =#{sn,jdbcType=VARCHAR}
  </select>

  <select id="selectLockActiveByLocksnOrProkey" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
    sl.active,
    sc.address,
    sc.cname,
    sl.pro_key,
    sl.sn
    FROM
    sp_lock sl
    JOIN sp_community sc ON sl.community = sc.cid
    <where>
        <if test="params.locksn !=null">
          sl.sn = #{params.locksn}
        </if>
        <if test="params.prokey !=null">
            AND sl.pro_key=#{params.prokey}
        </if>
    </where>
  </select>


</mapper>