<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.SpLockMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.SpLock" >
    <id column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="code1" property="code1" jdbcType="VARCHAR" />
    <result column="code2" property="code2" jdbcType="VARCHAR" />
    <result column="active" property="active" jdbcType="BIT" />
    <result column="ver" property="ver" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="INTEGER" />
    <result column="activetime" property="activetime" jdbcType="INTEGER" />
    <result column="card" property="card" jdbcType="VARCHAR" />
    <result column="lbs" property="lbs" jdbcType="VARCHAR" />
    <result column="ping" property="ping" jdbcType="INTEGER" />
    <result column="upcyc" property="upcyc" jdbcType="INTEGER" />
    <result column="overtime" property="overtime" jdbcType="INTEGER" />
    <result column="tcp" property="tcp" jdbcType="INTEGER" />
    <result column="retry" property="retry" jdbcType="TINYINT" />
    <result column="ip1" property="ip1" jdbcType="VARCHAR" />
    <result column="ip2" property="ip2" jdbcType="VARCHAR" />
    <result column="port1" property="port1" jdbcType="INTEGER" />
    <result column="port2" property="port2" jdbcType="INTEGER" />
    <result column="apn" property="apn" jdbcType="VARCHAR" />
    <result column="dialuser" property="dialuser" jdbcType="VARCHAR" />
    <result column="dialpass" property="dialpass" jdbcType="VARCHAR" />
    <result column="adminid" property="adminid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sn, code1, code2, active, ver, addtime, activetime, card, lbs, ping, upcyc, overtime, 
    tcp, retry, ip1, ip2, port1, port2, apn, dialuser, dialpass, adminid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.SpLockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sp_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sp_lock
    where sn = #{sn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sp_lock
    where sn = #{sn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.SpLockExample" >
    delete from sp_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.SpLock" >
    insert into sp_lock (sn, code1, code2, 
      active, ver, addtime, activetime, 
      card, lbs, ping, upcyc, 
      overtime, tcp, retry, 
      ip1, ip2, port1, port2, 
      apn, dialuser, dialpass, 
      adminid)
    values (#{sn,jdbcType=VARCHAR}, #{code1,jdbcType=VARCHAR}, #{code2,jdbcType=VARCHAR}, 
      #{active,jdbcType=BIT}, #{ver,jdbcType=VARCHAR}, #{addtime,jdbcType=INTEGER}, #{activetime,jdbcType=INTEGER}, 
      #{card,jdbcType=VARCHAR}, #{lbs,jdbcType=VARCHAR}, #{ping,jdbcType=INTEGER}, #{upcyc,jdbcType=INTEGER}, 
      #{overtime,jdbcType=INTEGER}, #{tcp,jdbcType=INTEGER}, #{retry,jdbcType=TINYINT}, 
      #{ip1,jdbcType=VARCHAR}, #{ip2,jdbcType=VARCHAR}, #{port1,jdbcType=INTEGER}, #{port2,jdbcType=INTEGER}, 
      #{apn,jdbcType=VARCHAR}, #{dialuser,jdbcType=VARCHAR}, #{dialpass,jdbcType=VARCHAR}, 
      #{adminid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.SpLock" >
    insert into sp_lock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sn != null" >
        sn,
      </if>
      <if test="code1 != null" >
        code1,
      </if>
      <if test="code2 != null" >
        code2,
      </if>
      <if test="active != null" >
        active,
      </if>
      <if test="ver != null" >
        ver,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="activetime != null" >
        activetime,
      </if>
      <if test="card != null" >
        card,
      </if>
      <if test="lbs != null" >
        lbs,
      </if>
      <if test="ping != null" >
        ping,
      </if>
      <if test="upcyc != null" >
        upcyc,
      </if>
      <if test="overtime != null" >
        overtime,
      </if>
      <if test="tcp != null" >
        tcp,
      </if>
      <if test="retry != null" >
        retry,
      </if>
      <if test="ip1 != null" >
        ip1,
      </if>
      <if test="ip2 != null" >
        ip2,
      </if>
      <if test="port1 != null" >
        port1,
      </if>
      <if test="port2 != null" >
        port2,
      </if>
      <if test="apn != null" >
        apn,
      </if>
      <if test="dialuser != null" >
        dialuser,
      </if>
      <if test="dialpass != null" >
        dialpass,
      </if>
      <if test="adminid != null" >
        adminid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="code1 != null" >
        #{code1,jdbcType=VARCHAR},
      </if>
      <if test="code2 != null" >
        #{code2,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        #{active,jdbcType=BIT},
      </if>
      <if test="ver != null" >
        #{ver,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=INTEGER},
      </if>
      <if test="activetime != null" >
        #{activetime,jdbcType=INTEGER},
      </if>
      <if test="card != null" >
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="lbs != null" >
        #{lbs,jdbcType=VARCHAR},
      </if>
      <if test="ping != null" >
        #{ping,jdbcType=INTEGER},
      </if>
      <if test="upcyc != null" >
        #{upcyc,jdbcType=INTEGER},
      </if>
      <if test="overtime != null" >
        #{overtime,jdbcType=INTEGER},
      </if>
      <if test="tcp != null" >
        #{tcp,jdbcType=INTEGER},
      </if>
      <if test="retry != null" >
        #{retry,jdbcType=TINYINT},
      </if>
      <if test="ip1 != null" >
        #{ip1,jdbcType=VARCHAR},
      </if>
      <if test="ip2 != null" >
        #{ip2,jdbcType=VARCHAR},
      </if>
      <if test="port1 != null" >
        #{port1,jdbcType=INTEGER},
      </if>
      <if test="port2 != null" >
        #{port2,jdbcType=INTEGER},
      </if>
      <if test="apn != null" >
        #{apn,jdbcType=VARCHAR},
      </if>
      <if test="dialuser != null" >
        #{dialuser,jdbcType=VARCHAR},
      </if>
      <if test="dialpass != null" >
        #{dialpass,jdbcType=VARCHAR},
      </if>
      <if test="adminid != null" >
        #{adminid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.SpLockExample" resultType="java.lang.Integer" >
    select count(*) from sp_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sp_lock
    <set >
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.code1 != null" >
        code1 = #{record.code1,jdbcType=VARCHAR},
      </if>
      <if test="record.code2 != null" >
        code2 = #{record.code2,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null" >
        active = #{record.active,jdbcType=BIT},
      </if>
      <if test="record.ver != null" >
        ver = #{record.ver,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=INTEGER},
      </if>
      <if test="record.activetime != null" >
        activetime = #{record.activetime,jdbcType=INTEGER},
      </if>
      <if test="record.card != null" >
        card = #{record.card,jdbcType=VARCHAR},
      </if>
      <if test="record.lbs != null" >
        lbs = #{record.lbs,jdbcType=VARCHAR},
      </if>
      <if test="record.ping != null" >
        ping = #{record.ping,jdbcType=INTEGER},
      </if>
      <if test="record.upcyc != null" >
        upcyc = #{record.upcyc,jdbcType=INTEGER},
      </if>
      <if test="record.overtime != null" >
        overtime = #{record.overtime,jdbcType=INTEGER},
      </if>
      <if test="record.tcp != null" >
        tcp = #{record.tcp,jdbcType=INTEGER},
      </if>
      <if test="record.retry != null" >
        retry = #{record.retry,jdbcType=TINYINT},
      </if>
      <if test="record.ip1 != null" >
        ip1 = #{record.ip1,jdbcType=VARCHAR},
      </if>
      <if test="record.ip2 != null" >
        ip2 = #{record.ip2,jdbcType=VARCHAR},
      </if>
      <if test="record.port1 != null" >
        port1 = #{record.port1,jdbcType=INTEGER},
      </if>
      <if test="record.port2 != null" >
        port2 = #{record.port2,jdbcType=INTEGER},
      </if>
      <if test="record.apn != null" >
        apn = #{record.apn,jdbcType=VARCHAR},
      </if>
      <if test="record.dialuser != null" >
        dialuser = #{record.dialuser,jdbcType=VARCHAR},
      </if>
      <if test="record.dialpass != null" >
        dialpass = #{record.dialpass,jdbcType=VARCHAR},
      </if>
      <if test="record.adminid != null" >
        adminid = #{record.adminid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sp_lock
    set sn = #{record.sn,jdbcType=VARCHAR},
      code1 = #{record.code1,jdbcType=VARCHAR},
      code2 = #{record.code2,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=BIT},
      ver = #{record.ver,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=INTEGER},
      activetime = #{record.activetime,jdbcType=INTEGER},
      card = #{record.card,jdbcType=VARCHAR},
      lbs = #{record.lbs,jdbcType=VARCHAR},
      ping = #{record.ping,jdbcType=INTEGER},
      upcyc = #{record.upcyc,jdbcType=INTEGER},
      overtime = #{record.overtime,jdbcType=INTEGER},
      tcp = #{record.tcp,jdbcType=INTEGER},
      retry = #{record.retry,jdbcType=TINYINT},
      ip1 = #{record.ip1,jdbcType=VARCHAR},
      ip2 = #{record.ip2,jdbcType=VARCHAR},
      port1 = #{record.port1,jdbcType=INTEGER},
      port2 = #{record.port2,jdbcType=INTEGER},
      apn = #{record.apn,jdbcType=VARCHAR},
      dialuser = #{record.dialuser,jdbcType=VARCHAR},
      dialpass = #{record.dialpass,jdbcType=VARCHAR},
      adminid = #{record.adminid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.SpLock" >
    update sp_lock
    <set >
      <if test="code1 != null" >
        code1 = #{code1,jdbcType=VARCHAR},
      </if>
      <if test="code2 != null" >
        code2 = #{code2,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        active = #{active,jdbcType=BIT},
      </if>
      <if test="ver != null" >
        ver = #{ver,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="activetime != null" >
        activetime = #{activetime,jdbcType=INTEGER},
      </if>
      <if test="card != null" >
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="lbs != null" >
        lbs = #{lbs,jdbcType=VARCHAR},
      </if>
      <if test="ping != null" >
        ping = #{ping,jdbcType=INTEGER},
      </if>
      <if test="upcyc != null" >
        upcyc = #{upcyc,jdbcType=INTEGER},
      </if>
      <if test="overtime != null" >
        overtime = #{overtime,jdbcType=INTEGER},
      </if>
      <if test="tcp != null" >
        tcp = #{tcp,jdbcType=INTEGER},
      </if>
      <if test="retry != null" >
        retry = #{retry,jdbcType=TINYINT},
      </if>
      <if test="ip1 != null" >
        ip1 = #{ip1,jdbcType=VARCHAR},
      </if>
      <if test="ip2 != null" >
        ip2 = #{ip2,jdbcType=VARCHAR},
      </if>
      <if test="port1 != null" >
        port1 = #{port1,jdbcType=INTEGER},
      </if>
      <if test="port2 != null" >
        port2 = #{port2,jdbcType=INTEGER},
      </if>
      <if test="apn != null" >
        apn = #{apn,jdbcType=VARCHAR},
      </if>
      <if test="dialuser != null" >
        dialuser = #{dialuser,jdbcType=VARCHAR},
      </if>
      <if test="dialpass != null" >
        dialpass = #{dialpass,jdbcType=VARCHAR},
      </if>
      <if test="adminid != null" >
        adminid = #{adminid,jdbcType=INTEGER},
      </if>
    </set>
    where sn = #{sn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.SpLock" >
    update sp_lock
    set code1 = #{code1,jdbcType=VARCHAR},
      code2 = #{code2,jdbcType=VARCHAR},
      active = #{active,jdbcType=BIT},
      ver = #{ver,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=INTEGER},
      activetime = #{activetime,jdbcType=INTEGER},
      card = #{card,jdbcType=VARCHAR},
      lbs = #{lbs,jdbcType=VARCHAR},
      ping = #{ping,jdbcType=INTEGER},
      upcyc = #{upcyc,jdbcType=INTEGER},
      overtime = #{overtime,jdbcType=INTEGER},
      tcp = #{tcp,jdbcType=INTEGER},
      retry = #{retry,jdbcType=TINYINT},
      ip1 = #{ip1,jdbcType=VARCHAR},
      ip2 = #{ip2,jdbcType=VARCHAR},
      port1 = #{port1,jdbcType=INTEGER},
      port2 = #{port2,jdbcType=INTEGER},
      apn = #{apn,jdbcType=VARCHAR},
      dialuser = #{dialuser,jdbcType=VARCHAR},
      dialpass = #{dialpass,jdbcType=VARCHAR},
      adminid = #{adminid,jdbcType=INTEGER}
    where sn = #{sn,jdbcType=VARCHAR}
  </update>
  <select id="selectUnionByPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT
	sl.createtime
    FROM
	sp_member_relation sr
    JOIN sp_admin_lock sl ON sr.locksn = sl.locksn
   WHERE
	sr.phone = #{sl.phone,jdbcType=VARCHAR};
  </select>
</mapper>