<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.TbCollectMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.TbCollect" >
    <id column="collect_id" property="collectId" jdbcType="VARCHAR" />
    <result column="housing_id" property="housingId" jdbcType="VARCHAR" />
    <result column="renter_id" property="renterId" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="footmark" property="footmark" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    collect_id, housing_id, renter_id, created, footmark
  </sql>
  <select id="isCollect" resultMap="BaseResultMap">
  	SELECT
		<include refid="Base_Column_List" />
	FROM
		tb_collect
	WHERE
		housing_id = '${id}'
	AND renter_id = '${rentId}'
	AND footmark = ${footmark}
  </select>
  <delete id="delCollect">
  	DELETE
		FROM
			tb_collect
		WHERE
			housing_id = '${hsid}'
		AND renter_id = '${id}'
		AND footmark = 1
  </delete>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.TbCollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_collect
    where collect_id = #{collectId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_collect
    where collect_id = #{collectId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.TbCollectExample" >
    delete from tb_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.TbCollect" >
    insert into tb_collect (collect_id, housing_id, renter_id, 
      created, footmark)
    values (#{collectId,jdbcType=VARCHAR}, #{housingId,jdbcType=VARCHAR}, #{renterId,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{footmark,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.TbCollect" >
    insert into tb_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectId != null" >
        collect_id,
      </if>
      <if test="housingId != null" >
        housing_id,
      </if>
      <if test="renterId != null" >
        renter_id,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="footmark != null" >
        footmark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectId != null" >
        #{collectId,jdbcType=VARCHAR},
      </if>
      <if test="housingId != null" >
        #{housingId,jdbcType=VARCHAR},
      </if>
      <if test="renterId != null" >
        #{renterId,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="footmark != null" >
        #{footmark,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.TbCollectExample" resultType="java.lang.Integer" >
    select count(*) from tb_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_collect
    <set >
      <if test="record.collectId != null" >
        collect_id = #{record.collectId,jdbcType=VARCHAR},
      </if>
      <if test="record.housingId != null" >
        housing_id = #{record.housingId,jdbcType=VARCHAR},
      </if>
      <if test="record.renterId != null" >
        renter_id = #{record.renterId,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.footmark != null" >
        footmark = #{record.footmark,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_collect
    set collect_id = #{record.collectId,jdbcType=VARCHAR},
      housing_id = #{record.housingId,jdbcType=VARCHAR},
      renter_id = #{record.renterId,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      footmark = #{record.footmark,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.TbCollect" >
    update tb_collect
    <set >
      <if test="housingId != null" >
        housing_id = #{housingId,jdbcType=VARCHAR},
      </if>
      <if test="renterId != null" >
        renter_id = #{renterId,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="footmark != null" >
        footmark = #{footmark,jdbcType=TINYINT},
      </if>
    </set>
    where collect_id = #{collectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.TbCollect" >
    update tb_collect
    set housing_id = #{housingId,jdbcType=VARCHAR},
      renter_id = #{renterId,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      footmark = #{footmark,jdbcType=TINYINT}
    where collect_id = #{collectId,jdbcType=VARCHAR}
  </update>
</mapper>