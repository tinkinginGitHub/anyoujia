<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.TbHousingMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.TbHousing" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="area_id" property="areaId" jdbcType="VARCHAR" />
    <result column="apartment_id" property="apartmentId" jdbcType="VARCHAR" />
    <result column="voucher" property="voucher" jdbcType="TINYINT" />
    <result column="special" property="special" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="pic_info" property="picInfo" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="facility" property="facility" jdbcType="VARCHAR" />
    <result column="rent" property="rent" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="expected_time" property="expectedTime" jdbcType="TIMESTAMP" />
    <result column="superior" property="superior" jdbcType="TINYINT" />
    <result column="house_type" property="houseType" jdbcType="VARCHAR" />
    <result column="hall_room" property="hallRoom" jdbcType="VARCHAR" />
    <result column="rooms" property="rooms" jdbcType="VARCHAR" />
    <result column="payment_id" property="paymentId" jdbcType="VARCHAR" />
    <result column="acreage" property="acreage" jdbcType="DOUBLE" />
    <result column="subway_line" property="subwayLine" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="storey" property="storey" jdbcType="VARCHAR" />
    <result column="orientations" property="orientations" jdbcType="VARCHAR" />
    <result column="housekeeperid" property="housekeeperid" jdbcType="VARCHAR" />
    <result column="payment_type" property="paymentType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, area_id, apartment_id, voucher, special, status, created, updated, pic_info,
    IFNULL(location,'') location, pic_url, facility, rent, book_id, money, expected_time, superior, IFNULL(house_type,'') house_type,
    hall_room, rooms, payment_id, acreage, subway_line, latitude, longitude, storey, 
    orientations, housekeeperid,payment_type
  </sql>
  <select id="getStation" parameterType="string" resultType="string">
  	SELECT
		station
	FROM
		`tb_subway_station`
	WHERE
		subway = '${subway}';
  </select>
  <select id="fuzzySearch" parameterType="string" resultType="map">
  	SELECT
		CASE
	WHEN ISNULL(sup.name) THEN
		area.`name`
	ELSE
		sup.name
	END title,
	 area.geo_addr info
	FROM
		tb_supplier sup
	LEFT JOIN tb_areas area ON sup.area_id = area.id
	WHERE
		sup.name LIKE CONCAT('%','${key}','%')
	OR area.`name` LIKE CONCAT('%','${key}','%')
	OR area.geo_addr LIKE CONCAT('%','${key}','%')
	UNION
		SELECT
			CASE
		WHEN ISNULL(sup.name) THEN
			area.`name`
		ELSE
			sup.name
		END title,
		area.geo_addr info
	FROM
		tb_supplier sup
	RIGHT JOIN tb_areas area ON sup.area_id = area.id
	WHERE
		sup.name LIKE CONCAT('%','${key}','%')
	OR area.`name` LIKE CONCAT('%','${key}','%')
	OR area.geo_addr LIKE CONCAT('%','${key}','%')
	LIMIT 5
  </select>
  <select id="getPicbyId" parameterType="string" resultType="map">
  	SELECT
		`name`,
		url2
	FROM
		tb_picture
	WHERE
		housing_id = '${id}'
  </select>
  <update id="updateHousekeeper">
  	UPDATE `tb_housing`
	SET housekeeperid = '${jsid}'
	WHERE
		housekeeperid = '${id}';
  </update>
  <select id="enterpriseInformation" parameterType="string" resultType="cn.anyoufang.entity.EnterpriseInformation">
  	SELECT
		name cardholder,
		logo,
		juridical,
		phone,
		bail
	FROM
		`tb_supplier`
	WHERE
		id = '${id}';
  </select>
  <select id="roomDetail" parameterType="string" resultType="map">
	SELECT
		hs.id,
		geo_addr,
		bis_addr,
		area.`name` aname,
		house_type,
		acreage,
		money,
		special,
		pic_url,
		bes.`name` bname,
		bes.phone,
		viewing_time,
		bes.basic_info,
		gender,
		bes.`status`,
		apart.name cardholder,hall_room,storey
	FROM
		tb_bespeak bes
	LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
	LEFT JOIN tb_areas area ON hs.area_id = area.id
	LEFT JOIN tb_supplier apart ON hs.apartment_id = apart.id
	WHERE
		bes.id = '${id}'
  </select>
  <select id="roomList" resultType="map">
  	SELECT
		hs.id,
		area.`name` aname,
		bes.phone,
		viewing_time,
		bes.`status`,
		apart.name cardholder,
		rent,
		bis_addr,
		bes.`name`bname,
		storey,
		money,
		geo_addr,house_type
	FROM
		tb_bespeak bes
	LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
	LEFT JOIN tb_supplier apart ON hs.apartment_id = apart.id
	LEFT JOIN tb_areas area ON hs.area_id = area.id
  </select>
  <select id="searchRoomList" resultType="map" parameterType="cn.anyoufang.entity.RoomParam">
  	SELECT
		hs.id,
		area.`name` aname,
		bes.phone,
		viewing_time,
		bes.`status`,
		apart.name cardholder,
		rent,
		bis_addr,
		bes.`name` bname,
		storey,
		money,
		geo_addr,house_type
	FROM
		tb_bespeak bes
	LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
	LEFT JOIN tb_supplier apart ON hs.apartment_id = apart.id
	LEFT JOIN tb_areas area ON hs.area_id = area.id
	where 1=1 
		<if test="status !=null">
			and bes.`status`=${status}
		</if>
		<if test="productNum !=null">
			and hs.id='${productNum}'
		</if>
		<if test="user !=null">
			and bes.name like CONCAT('%','${user}','%')
		</if>
		<if test="phone !=null">
			and bes.phone like CONCAT('%','${phone}','%')
		</if>
		<if test="viewingBegin !=null">
			and bes.viewing_time  &gt; DATE_FORMAT('${viewingBegin}','%Y-%m-%d')
		</if>
		<if test="viewingEnd !=null">
			and bes.viewing_time  &lt; DATE_FORMAT('${viewingEnd}','%Y-%m-%d')
		</if>
		<if test="productName !=null">
			and (bis_addr like CONCAT('%','${productName}','%') or area.`name` like CONCAT('%','${productName}','%'))
		</if>
		<if test="supplier !=null">
			and apart.name like CONCAT('%','${supplier}','%')
		</if>
  </select>
  <select id="getMyCollect" resultType="string">
  	SELECT
		DISTINCT housing_id
	FROM
		tb_collect
	WHERE
		renter_id = '${id}'
	AND footmark = ${footmark}
  </select>
  <select id="getFootprint" resultType="map">
  	SELECT
		hs.id,
		geo_addr,
		bis_addr,
		area.`name`,
		house_type,
		hall_room,
		acreage,
		money,
		special,
		pic_url,
		rent,
		storey,
		collect.created,
		voucher,
		hs. STATUS hs_status,
		count(DISTINCT hs.id)
	FROM
		tb_housing hs
	LEFT JOIN tb_areas area ON hs.area_id = area.id
	LEFT JOIN tb_collect collect ON hs.id = collect.housing_id
	WHERE
		footmark=${b} and
		hs.id in
		<foreach collection="lids" index="index" item="item" open="(" separator="," close=")">  
        	#{item}
    	</foreach>
    GROUP BY hs.id
    order by collect.created desc
  </select>
  <select id="getMyRoomRecord" resultType="map">
		SELECT
			hs.id,
			geo_addr,
			bis_addr,
			area.`name`,
			house_type,
			hall_room,
			acreage,
			money,
			special,
			pic_url,
			rent,
			viewing_time,storey,voucher,hs.status hs_status,phone,hk.contact
		FROM
			tb_bespeak bes
		LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
		LEFT JOIN tb_areas area ON hs.area_id = area.id
		LEFT JOIN tb_housekeeper hk ON hk.id = hs.housekeeperid
		WHERE
		bes.renter_id = '${id}'
		<choose>
			<when test="recordstatus != null">
				and bes.status=${recordstatus}
			</when>
			<otherwise>
				and bes.status=1
			</otherwise>
		</choose>
		order by bes.created desc
	</select>
	<select id="getMyAppointment" resultType="map">
	SELECT
		hs.id,
		geo_addr,
		bis_addr,
		area.`name`,
		rent,
		hall_room,
		house_type,
		acreage,
		money,
		special,
		pic_url,
		storey,
		voucher,
		basic_info,
		viewing_time,hs.status,hk.contact
	FROM
		tb_housing hs
	LEFT JOIN tb_areas area ON hs.area_id = area.id
	LEFT JOIN tb_housekeeper hk ON hs.housekeeperid = hk.id
	LEFT JOIN (
		SELECT
			*
		FROM
			(
				SELECT
				*
				FROM
					tb_bespeak
				WHERE
					housing_id = '${id}'
				AND renter_id = '${rentId}'
				HAVING
					MAX(viewing_time)
				UNION ALL
				SELECT
					*
				FROM
					tb_bespeak
				WHERE
					housing_id = '${id}'
				AND renter_id = '${rentId}'
				AND ISNULL(viewing_time)
			) t1
		WHERE
			t1. STATUS = 2
	) bes ON hs.id = bes.housing_id
	WHERE
		hs.id = '${id}'
	</select>
	<select id="getHousingbyId" parameterType="string" resultType="map">
		SELECT
			hs.id,
			hs.pic_url,
			hs.pic_info,
			bis_addr,
			area.`name`,
			hs.rent,
			hs.hall_room,
			hs.voucher,
			hs.money,
			hs.payment_type,
			hs.house_type,
			hs.acreage,
			hs.storey,
			hs.orientations,
			hs.special,
			hs.facility,
			hs.location,
			area_property,
			area.household_num type,
			area.`year`,
			area.property_fee,
			apart.name cardholder,
			apart.logo,expected_time,hs.latitude,hs.longitude,payment_id,hs.status,geo_addr
		FROM
			tb_housing hs
		LEFT JOIN tb_areas area ON hs.area_id = area.id
		LEFT JOIN tb_supplier apart ON hs.apartment_id = apart.id
		WHERE
		hs.id = '${id}'
	</select>
	<select id="selectHousingSource" parameterType="cn.anyoufang.entity.SearchParam"
		resultType="map">
		SELECT
			hs.id,
			geo_addr,
			bis_addr,
			area.`name`,
			rent,
			hall_room,
			house_type,
			acreage,
			money,
			special,
			pic_url,storey,voucher,hs.status
		FROM
			tb_housing hs
		LEFT JOIN tb_areas area ON hs.area_id = area.id
		WHERE
		1=1 and hs.status=2
		<if test="areas!=null">
			AND (geo_addr LIKE CONCAT('%','${areas}','%') or area.`name` LIKE CONCAT('%','${areas}','%'))
		</if>
		<if test="areas2!=null">
			AND (geo_addr LIKE CONCAT('%','${areas2}','%' or area.`name` LIKE CONCAT('%','${area2}','%'))
		</if>
		<if test="maxPrice>0">
			AND money BETWEEN ${minPrice} AND ${maxPrice}
		</if>
		<if test="intPrice!=null">
			AND money &gt;= ${intPrice}
		</if>
		<if test="superior!=null">
			AND rent=${superior}
		</if>
		<if test="rooms!=null">
			<choose>
				<when test="rooms==1">
					AND rooms like '%1%'
				</when>
				<when test="rooms==2">
					AND rooms like '%2%'
				</when>
				<when test="rooms==3">
					AND rooms not like '%1%' AND rooms not like '%2%'
				</when>
				<when test="rooms==12">
					AND	(rooms like '%1%' or rooms like '%2%')
				</when>
				<when test="rooms==13">
					AND	rooms not like '%2%'
				</when>
				<when test="rooms==23">
					AND	rooms not like '%1%'
				</when>
			</choose>
		</if>
		<if test="gis!=null">
			AND (hs.latitude BETWEEN ${min_latitude} AND ${max_latitude})
			AND (hs.longitude BETWEEN ${min_longitude} AND ${max_longitude})
		</if>
		<if test="subway!=null">
			and
			<foreach collection="subway" item="item" index="index" open="(" separator="or" close=")">
				 subway_line like CONCAT('%','${item}','%')
			</foreach>
		</if>
		<if test="multiculture!=null">
			<foreach collection="multiculture" item="item" index="index">
				and special like CONCAT('%','${item}','%')
			</foreach>
		</if>
		<if test="paymentType!=null">
			and
			<foreach collection="paymentType" item="item" index="index" open="(" separator="or" close=")">
				payment_type like CONCAT('%','${item}','%')
			</foreach>
		</if>
		<if test="voucher != null">
			AND voucher=${voucher}
		</if>
		<if test="order == null">
			ORDER BY hs.created desc
		</if>
		<if test="order != null">
			<choose>
				<when test="order==1">
					ORDER BY money asc
				</when>
				<when test="order==2">
					ORDER BY money desc
				</when>
				<when test="order==3">
					ORDER BY acreage asc
				</when>
				<otherwise>
					ORDER BY acreage desc
				</otherwise>
			</choose>
		</if>
		
	</select>
	<select id="roomDetailSupply" parameterType="string" resultType="map">
		SELECT
			hs.id,
			geo_addr,
			bis_addr,
			area.`name` aname,
			storey,
			house_type,
			acreage,
			money,
			special,
			pic_url,
			bes.`name` bname,
			bes.phone,
			viewing_time,
			bes.basic_info,
			gender,
			bes.`status`,hall_room,storey
		FROM
			tb_bespeak bes
		LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
		LEFT JOIN tb_areas area ON hs.area_id = area.id
		WHERE
			bes.id = '${id}'
	</select>
	<select id="roomListSupply" resultType="map">
		SELECT
			hs.id,
			bes.`name` bname,
			bes.phone,bes.id bes_id,
			viewing_time,
			bes.`status`,
			apart.name cardholder,
			rent,
			bis_addr,
			IFNULL(area.`name`,'') aname,
			IFNULL(storey,'') storey,
			money,
			geo_addr,house_type
		FROM
			tb_bespeak bes
		LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
		LEFT JOIN tb_supplier apart ON hs.apartment_id = apart.id
		LEFT JOIN tb_areas area ON hs.area_id = area.id
		where apart.id='${username}'
	</select>
	<select id="searchRoomListSupply" resultType="map"
		parameterType="cn.anyoufang.entity.RoomParam">
		SELECT
			hs.id,
			bes.`name` bname,
			bes.phone,bes.id bes_id,
			viewing_time,
			bes.`status`,
			apart.name cardholder,
			rent,
			bis_addr,
			area.`name` aname,
			storey,
			money,
			geo_addr,house_type
		FROM
			tb_bespeak bes
		LEFT JOIN tb_housing hs ON bes.housing_id = hs.id
		LEFT JOIN tb_supplier apart ON hs.apartment_id = apart.id
		LEFT JOIN tb_areas area ON hs.area_id = area.id
		where 1=1 and apart.id='${username}'
		<if test="status !=null and status !=''">
			and bes.`status`='${status}'
		</if>
		<if test="productNum !=null and productNum !=''">
			and hs.id='${productNum}'
		</if>
		<if test="phone !=null and phone !=''">
			and bes.phone like CONCAT('%','${phone}','%')
		</if>
		<if test="viewingBegin !=null and viewingBegin !=''">
			and bes.viewing_time &gt; DATE_FORMAT('${viewingBegin}','%Y-%m-%d')
		</if>
		<if test="viewingEnd !=null and viewingEnd !=''">
			and bes.viewing_time &lt; DATE_FORMAT('${viewingEnd}','%Y-%m-%d')
		</if>
		<if test="productName !=null and productName !=''">
			and (bis_addr like CONCAT('%','${productName}','%') or
			area.`name` like CONCAT('%','${productName}','%'))
		</if>
	</select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.TbHousingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_housing
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_housing
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.TbHousingExample" >
    delete from tb_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.TbHousing" >
    insert into tb_housing (id, area_id, apartment_id, 
      voucher, special, status, 
      created, updated, pic_info, 
      location, pic_url, facility, 
      rent, book_id, money, 
      expected_time, superior, house_type, 
      hall_room, rooms, payment_id, 
      acreage, subway_line, latitude, 
      longitude, storey, orientations, 
      housekeeperid,payment_type)
    values (#{id,jdbcType=VARCHAR}, #{areaId,jdbcType=VARCHAR}, #{apartmentId,jdbcType=VARCHAR}, 
      #{voucher,jdbcType=TINYINT}, #{special,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, #{picInfo,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{picUrl,jdbcType=VARCHAR}, #{facility,jdbcType=VARCHAR}, 
      #{rent,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER}, 
      #{expectedTime,jdbcType=TIMESTAMP}, #{superior,jdbcType=TINYINT}, #{houseType,jdbcType=VARCHAR}, 
      #{hallRoom,jdbcType=VARCHAR}, #{rooms,jdbcType=VARCHAR}, #{paymentId,jdbcType=VARCHAR}, 
      #{acreage,jdbcType=DOUBLE}, #{subwayLine,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, 
      #{longitude,jdbcType=DOUBLE}, #{storey,jdbcType=VARCHAR}, #{orientations,jdbcType=VARCHAR}, 
      #{housekeeperid,jdbcType=VARCHAR}, #{paymentType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.TbHousing" >
    insert into tb_housing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="apartmentId != null" >
        apartment_id,
      </if>
      <if test="voucher != null" >
        voucher,
      </if>
      <if test="special != null" >
        special,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="picInfo != null" >
        pic_info,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="facility != null" >
        facility,
      </if>
      <if test="rent != null" >
        rent,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="expectedTime != null" >
        expected_time,
      </if>
      <if test="superior != null" >
        superior,
      </if>
      <if test="houseType != null" >
        house_type,
      </if>
      <if test="hallRoom != null" >
        hall_room,
      </if>
      <if test="rooms != null" >
        rooms,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="acreage != null" >
        acreage,
      </if>
      <if test="subwayLine != null" >
        subway_line,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="storey != null" >
        storey,
      </if>
      <if test="orientations != null" >
        orientations,
      </if>
      <if test="housekeeperid != null" >
        housekeeperid,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=VARCHAR},
      </if>
      <if test="apartmentId != null" >
        #{apartmentId,jdbcType=VARCHAR},
      </if>
      <if test="voucher != null" >
        #{voucher,jdbcType=TINYINT},
      </if>
      <if test="special != null" >
        #{special,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="picInfo != null" >
        #{picInfo,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="facility != null" >
        #{facility,jdbcType=VARCHAR},
      </if>
      <if test="rent != null" >
        #{rent,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="expectedTime != null" >
        #{expectedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="superior != null" >
        #{superior,jdbcType=TINYINT},
      </if>
      <if test="houseType != null" >
        #{houseType,jdbcType=VARCHAR},
      </if>
      <if test="hallRoom != null" >
        #{hallRoom,jdbcType=VARCHAR},
      </if>
      <if test="rooms != null" >
        #{rooms,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="acreage != null" >
        #{acreage,jdbcType=DOUBLE},
      </if>
      <if test="subwayLine != null" >
        #{subwayLine,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="storey != null" >
        #{storey,jdbcType=VARCHAR},
      </if>
      <if test="orientations != null" >
        #{orientations,jdbcType=VARCHAR},
      </if>
      <if test="housekeeperid != null" >
        #{housekeeperid,jdbcType=VARCHAR},
      </if>
      <if test="payment_type != null" >
        #{paymentType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.TbHousingExample" resultType="java.lang.Integer" >
    select count(*) from tb_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_housing
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null" >
        area_id = #{record.areaId,jdbcType=VARCHAR},
      </if>
      <if test="record.apartmentId != null" >
        apartment_id = #{record.apartmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.voucher != null" >
        voucher = #{record.voucher,jdbcType=TINYINT},
      </if>
      <if test="record.special != null" >
        special = #{record.special,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.picInfo != null" >
        pic_info = #{record.picInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null" >
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.facility != null" >
        facility = #{record.facility,jdbcType=VARCHAR},
      </if>
      <if test="record.rent != null" >
        rent = #{record.rent,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.expectedTime != null" >
        expected_time = #{record.expectedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.superior != null" >
        superior = #{record.superior,jdbcType=TINYINT},
      </if>
      <if test="record.houseType != null" >
        house_type = #{record.houseType,jdbcType=VARCHAR},
      </if>
      <if test="record.hallRoom != null" >
        hall_room = #{record.hallRoom,jdbcType=VARCHAR},
      </if>
      <if test="record.rooms != null" >
        rooms = #{record.rooms,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentId != null" >
        payment_id = #{record.paymentId,jdbcType=VARCHAR},
      </if>
      <if test="record.acreage != null" >
        acreage = #{record.acreage,jdbcType=DOUBLE},
      </if>
      <if test="record.subwayLine != null" >
        subway_line = #{record.subwayLine,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.storey != null" >
        storey = #{record.storey,jdbcType=VARCHAR},
      </if>
      <if test="record.orientations != null" >
        orientations = #{record.orientations,jdbcType=VARCHAR},
      </if>
      <if test="record.housekeeperid != null" >
        housekeeperid = #{record.housekeeperid,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null" >
        payment_type = #{record.paymentType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_housing
    set id = #{record.id,jdbcType=VARCHAR},
      area_id = #{record.areaId,jdbcType=VARCHAR},
      apartment_id = #{record.apartmentId,jdbcType=VARCHAR},
      voucher = #{record.voucher,jdbcType=TINYINT},
      special = #{record.special,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      pic_info = #{record.picInfo,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      facility = #{record.facility,jdbcType=VARCHAR},
      rent = #{record.rent,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER},
      expected_time = #{record.expectedTime,jdbcType=TIMESTAMP},
      superior = #{record.superior,jdbcType=TINYINT},
      house_type = #{record.houseType,jdbcType=VARCHAR},
      hall_room = #{record.hallRoom,jdbcType=VARCHAR},
      rooms = #{record.rooms,jdbcType=VARCHAR},
      payment_id = #{record.paymentId,jdbcType=VARCHAR},
      acreage = #{record.acreage,jdbcType=DOUBLE},
      subway_line = #{record.subwayLine,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      storey = #{record.storey,jdbcType=VARCHAR},
      orientations = #{record.orientations,jdbcType=VARCHAR},
      housekeeperid = #{record.housekeeperid,jdbcType=VARCHAR},
      payment_type = #{record.paymentType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.TbHousing" >
    update tb_housing
    <set >
      <if test="areaId != null" >
        area_id = #{areaId,jdbcType=VARCHAR},
      </if>
      <if test="apartmentId != null" >
        apartment_id = #{apartmentId,jdbcType=VARCHAR},
      </if>
      <if test="voucher != null" >
        voucher = #{voucher,jdbcType=TINYINT},
      </if>
      <if test="special != null" >
        special = #{special,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="picInfo != null" >
        pic_info = #{picInfo,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="facility != null" >
        facility = #{facility,jdbcType=VARCHAR},
      </if>
      <if test="rent != null" >
        rent = #{rent,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="expectedTime != null" >
        expected_time = #{expectedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="superior != null" >
        superior = #{superior,jdbcType=TINYINT},
      </if>
      <if test="houseType != null" >
        house_type = #{houseType,jdbcType=VARCHAR},
      </if>
      <if test="hallRoom != null" >
        hall_room = #{hallRoom,jdbcType=VARCHAR},
      </if>
      <if test="rooms != null" >
        rooms = #{rooms,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="acreage != null" >
        acreage = #{acreage,jdbcType=DOUBLE},
      </if>
      <if test="subwayLine != null" >
        subway_line = #{subwayLine,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="storey != null" >
        storey = #{storey,jdbcType=VARCHAR},
      </if>
      <if test="orientations != null" >
        orientations = #{orientations,jdbcType=VARCHAR},
      </if>
      <if test="housekeeperid != null" >
        housekeeperid = #{housekeeperid,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.TbHousing" >
    update tb_housing
    set area_id = #{areaId,jdbcType=VARCHAR},
      apartment_id = #{apartmentId,jdbcType=VARCHAR},
      voucher = #{voucher,jdbcType=TINYINT},
      special = #{special,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      pic_info = #{picInfo,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      facility = #{facility,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      expected_time = #{expectedTime,jdbcType=TIMESTAMP},
      superior = #{superior,jdbcType=TINYINT},
      house_type = #{houseType,jdbcType=VARCHAR},
      hall_room = #{hallRoom,jdbcType=VARCHAR},
      rooms = #{rooms,jdbcType=VARCHAR},
      payment_id = #{paymentId,jdbcType=VARCHAR},
      acreage = #{acreage,jdbcType=DOUBLE},
      subway_line = #{subwayLine,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      storey = #{storey,jdbcType=VARCHAR},
      orientations = #{orientations,jdbcType=VARCHAR},
      housekeeperid = #{housekeeperid,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
	<select id="selectByDefinedExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.SupplyHousingManage">
		select
            h.id,
            h.created,
            h.updated,
            h.rent,
            h.`status`,
            h.money,
            h.area_id
		FROM
		tb_housing h
		LEFT JOIN tb_areas a ON h.area_id = a.id
        WHERE 1=1
        <if test="id !=null and id !=''">
            and h.id LIKE CONCAT('%','${id}','%')
        </if>
        <if test="location !=null and location !=''">
            and a.geo_addr LIKE CONCAT('%','${location}','%')
        </if>
        <if test="status != null">
            and h.`status`='${status}'
        </if>
        <if test="rent !=null and rent !=''">
            and h.rent='${rent}'
        </if>
        <if test="start !=null and start !='' and end !=null and end !=''">
            and DATE(h.updated) BETWEEN DATE('${start}') AND DATE('${end}')
        </if>
        ORDER BY h.updated DESC
	</select>
</mapper>