<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.SpMemberAuthMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.SpMemberAuth" >
    <id column="region" property="region" jdbcType="INTEGER" />
    <id column="room" property="room" jdbcType="INTEGER" />
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="devid" property="devid" jdbcType="INTEGER" />
    <result column="item" property="item" jdbcType="VARCHAR" />
    <result column="val" property="val" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    region, room, uid, devid, item, val
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.SpMemberAuthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sp_member_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.SpMemberAuthKey" >
    select 
    <include refid="Base_Column_List" />
    from sp_member_auth
    where region = #{region,jdbcType=INTEGER}
      and room = #{room,jdbcType=INTEGER}
      and uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.anyoufang.entity.SpMemberAuthKey" >
    delete from sp_member_auth
    where region = #{region,jdbcType=INTEGER}
      and room = #{room,jdbcType=INTEGER}
      and uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.SpMemberAuthExample" >
    delete from sp_member_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.SpMemberAuth" >
    insert into sp_member_auth (region, room, uid, 
      devid, item, val)
    values (#{region,jdbcType=INTEGER}, #{room,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{devid,jdbcType=INTEGER}, #{item,jdbcType=VARCHAR}, #{val,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.SpMemberAuth" >
    insert into sp_member_auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="region != null" >
        region,
      </if>
      <if test="room != null" >
        room,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="devid != null" >
        devid,
      </if>
      <if test="item != null" >
        item,
      </if>
      <if test="val != null" >
        val,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="region != null" >
        #{region,jdbcType=INTEGER},
      </if>
      <if test="room != null" >
        #{room,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="devid != null" >
        #{devid,jdbcType=INTEGER},
      </if>
      <if test="item != null" >
        #{item,jdbcType=VARCHAR},
      </if>
      <if test="val != null" >
        #{val,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.SpMemberAuthExample" resultType="java.lang.Integer" >
    select count(*) from sp_member_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sp_member_auth
    <set >
      <if test="record.region != null" >
        region = #{record.region,jdbcType=INTEGER},
      </if>
      <if test="record.room != null" >
        room = #{record.room,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.devid != null" >
        devid = #{record.devid,jdbcType=INTEGER},
      </if>
      <if test="record.item != null" >
        item = #{record.item,jdbcType=VARCHAR},
      </if>
      <if test="record.val != null" >
        val = #{record.val,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sp_member_auth
    set region = #{record.region,jdbcType=INTEGER},
      room = #{record.room,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      devid = #{record.devid,jdbcType=INTEGER},
      item = #{record.item,jdbcType=VARCHAR},
      val = #{record.val,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.SpMemberAuth" >
    update sp_member_auth
    <set >
      <if test="devid != null" >
        devid = #{devid,jdbcType=INTEGER},
      </if>
      <if test="item != null" >
        item = #{item,jdbcType=VARCHAR},
      </if>
      <if test="val != null" >
        val = #{val,jdbcType=BIT},
      </if>
    </set>
    where region = #{region,jdbcType=INTEGER}
      and room = #{room,jdbcType=INTEGER}
      and uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.SpMemberAuth" >
    update sp_member_auth
    set devid = #{devid,jdbcType=INTEGER},
      item = #{item,jdbcType=VARCHAR},
      val = #{val,jdbcType=BIT}
    where region = #{region,jdbcType=INTEGER}
      and room = #{room,jdbcType=INTEGER}
      and uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>