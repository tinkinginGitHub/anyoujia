<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.SpMemberMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.SpMember" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="bname" property="bname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="BIT" />
    <result column="wx" property="wx" jdbcType="INTEGER" />
    <result column="say" property="say" jdbcType="VARCHAR" />
    <result column="securitypwd" property="securitypwd" jdbcType="VARCHAR" />
    <result column="securityquestion" property="securityquestion" jdbcType="VARCHAR" />
    <result column="securityanswer" property="securityanswer" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.anyoufang.entity.SpMember" extends="BaseResultMap" >
    <result column="avatar" property="avatar" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, phone, password, bname, name, email, gender, wx, say, securitypwd, securityquestion, 
    securityanswer
  </sql>
  <sql id="Blob_Column_List" >
    avatar
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.anyoufang.entity.SpMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.SpMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sp_member
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sp_member
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.SpMemberExample" >
    delete from sp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.SpMember" >
    insert into sp_member (uid, phone, password, 
      bname, name, email, 
      gender, wx, say, securitypwd, 
      securityquestion, securityanswer, avatar
      )
    values (#{uid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{bname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{gender,jdbcType=BIT}, #{wx,jdbcType=INTEGER}, #{say,jdbcType=VARCHAR}, #{securitypwd,jdbcType=VARCHAR}, 
      #{securityquestion,jdbcType=VARCHAR}, #{securityanswer,jdbcType=VARCHAR}, #{avatar,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.SpMember" >
    insert into sp_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="bname != null" >
        bname,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="wx != null" >
        wx,
      </if>
      <if test="say != null" >
        say,
      </if>
      <if test="securitypwd != null" >
        securitypwd,
      </if>
      <if test="securityquestion != null" >
        securityquestion,
      </if>
      <if test="securityanswer != null" >
        securityanswer,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="bname != null" >
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=BIT},
      </if>
      <if test="wx != null" >
        #{wx,jdbcType=INTEGER},
      </if>
      <if test="say != null" >
        #{say,jdbcType=VARCHAR},
      </if>
      <if test="securitypwd != null" >
        #{securitypwd,jdbcType=VARCHAR},
      </if>
      <if test="securityquestion != null" >
        #{securityquestion,jdbcType=VARCHAR},
      </if>
      <if test="securityanswer != null" >
        #{securityanswer,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.SpMemberExample" resultType="java.lang.Integer" >
    select count(*) from sp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sp_member
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.bname != null" >
        bname = #{record.bname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.wx != null" >
        wx = #{record.wx,jdbcType=INTEGER},
      </if>
      <if test="record.say != null" >
        say = #{record.say,jdbcType=VARCHAR},
      </if>
      <if test="record.securitypwd != null" >
        securitypwd = #{record.securitypwd,jdbcType=VARCHAR},
      </if>
      <if test="record.securityquestion != null" >
        securityquestion = #{record.securityquestion,jdbcType=VARCHAR},
      </if>
      <if test="record.securityanswer != null" >
        securityanswer = #{record.securityanswer,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sp_member
    set uid = #{record.uid,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      bname = #{record.bname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      wx = #{record.wx,jdbcType=INTEGER},
      say = #{record.say,jdbcType=VARCHAR},
      securitypwd = #{record.securitypwd,jdbcType=VARCHAR},
      securityquestion = #{record.securityquestion,jdbcType=VARCHAR},
      securityanswer = #{record.securityanswer,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sp_member
    set uid = #{record.uid,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      bname = #{record.bname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      wx = #{record.wx,jdbcType=INTEGER},
      say = #{record.say,jdbcType=VARCHAR},
      securitypwd = #{record.securitypwd,jdbcType=VARCHAR},
      securityquestion = #{record.securityquestion,jdbcType=VARCHAR},
      securityanswer = #{record.securityanswer,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.SpMember" >
    update sp_member
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="bname != null" >
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="wx != null" >
        wx = #{wx,jdbcType=INTEGER},
      </if>
      <if test="say != null" >
        say = #{say,jdbcType=VARCHAR},
      </if>
      <if test="securitypwd != null" >
        securitypwd = #{securitypwd,jdbcType=VARCHAR},
      </if>
      <if test="securityquestion != null" >
        securityquestion = #{securityquestion,jdbcType=VARCHAR},
      </if>
      <if test="securityanswer != null" >
        securityanswer = #{securityanswer,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.anyoufang.entity.SpMember" >
    update sp_member
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      bname = #{bname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      wx = #{wx,jdbcType=INTEGER},
      say = #{say,jdbcType=VARCHAR},
      securitypwd = #{securitypwd,jdbcType=VARCHAR},
      securityquestion = #{securityquestion,jdbcType=VARCHAR},
      securityanswer = #{securityanswer,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=LONGVARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.SpMember" >
    update sp_member
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      bname = #{bname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      wx = #{wx,jdbcType=INTEGER},
      say = #{say,jdbcType=VARCHAR},
      securitypwd = #{securitypwd,jdbcType=VARCHAR},
      securityquestion = #{securityquestion,jdbcType=VARCHAR},
      securityanswer = #{securityanswer,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>