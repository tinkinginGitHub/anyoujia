<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anyoufang.mapper.TbBespeakMapper" >
  <resultMap id="BaseResultMap" type="cn.anyoufang.entity.TbBespeak" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="housing_id" property="housingId" jdbcType="VARCHAR" />
    <result column="renter_id" property="renterId" jdbcType="VARCHAR" />
    <result column="acc_renter_id" property="accRenterId" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="basic_info" property="basicInfo" jdbcType="VARCHAR" />
    <result column="viewing_time" property="viewingTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, housing_id, renter_id, acc_renter_id, created, updated, status, phone, basic_info, 
    viewing_time, name, gender
  </sql>
  <select id="isBespeak" resultType="Integer">
	SELECT
		count(1)
	FROM
		(
			SELECT
				*
			FROM
				tb_bespeak
			WHERE
				housing_id = '${id}'
			AND renter_id = '${rentId}'
			HAVING
				MAX(viewing_time)
			UNION ALL
			SELECT
				*
			FROM
				tb_bespeak
			WHERE
				housing_id = '${id}'
			AND renter_id = '${rentId}'
			AND ISNULL(viewing_time)
		) t1
	WHERE
		t1. STATUS = 2
  </select>
  <update id="seenHouse" parameterType="string">
  	UPDATE `tb_bespeak`
	SET `status` = 1
	WHERE
		id = '${besid}'
  </update>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anyoufang.entity.TbBespeakExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_bespeak
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_bespeak
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_bespeak
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anyoufang.entity.TbBespeakExample" >
    delete from tb_bespeak
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anyoufang.entity.TbBespeak" >
    insert into tb_bespeak (id, housing_id, renter_id, 
      acc_renter_id, created, updated, 
      status, phone, basic_info, 
      viewing_time, name, gender
      )
    values (#{id,jdbcType=VARCHAR}, #{housingId,jdbcType=VARCHAR}, #{renterId,jdbcType=VARCHAR}, 
      #{accRenterId,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{basicInfo,jdbcType=VARCHAR}, 
      #{viewingTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.anyoufang.entity.TbBespeak" >
    insert into tb_bespeak
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="housingId != null" >
        housing_id,
      </if>
      <if test="renterId != null" >
        renter_id,
      </if>
      <if test="accRenterId != null" >
        acc_renter_id,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="basicInfo != null" >
        basic_info,
      </if>
      <if test="viewingTime != null" >
        viewing_time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="housingId != null" >
        #{housingId,jdbcType=VARCHAR},
      </if>
      <if test="renterId != null" >
        #{renterId,jdbcType=VARCHAR},
      </if>
      <if test="accRenterId != null" >
        #{accRenterId,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="basicInfo != null" >
        #{basicInfo,jdbcType=VARCHAR},
      </if>
      <if test="viewingTime != null" >
        #{viewingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anyoufang.entity.TbBespeakExample" resultType="java.lang.Integer" >
    select count(*) from tb_bespeak
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_bespeak
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.housingId != null" >
        housing_id = #{record.housingId,jdbcType=VARCHAR},
      </if>
      <if test="record.renterId != null" >
        renter_id = #{record.renterId,jdbcType=VARCHAR},
      </if>
      <if test="record.accRenterId != null" >
        acc_renter_id = #{record.accRenterId,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.basicInfo != null" >
        basic_info = #{record.basicInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.viewingTime != null" >
        viewing_time = #{record.viewingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_bespeak
    set id = #{record.id,jdbcType=VARCHAR},
      housing_id = #{record.housingId,jdbcType=VARCHAR},
      renter_id = #{record.renterId,jdbcType=VARCHAR},
      acc_renter_id = #{record.accRenterId,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      basic_info = #{record.basicInfo,jdbcType=VARCHAR},
      viewing_time = #{record.viewingTime,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anyoufang.entity.TbBespeak" >
    update tb_bespeak
    <set >
      <if test="housingId != null" >
        housing_id = #{housingId,jdbcType=VARCHAR},
      </if>
      <if test="renterId != null" >
        renter_id = #{renterId,jdbcType=VARCHAR},
      </if>
      <if test="accRenterId != null" >
        acc_renter_id = #{accRenterId,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="basicInfo != null" >
        basic_info = #{basicInfo,jdbcType=VARCHAR},
      </if>
      <if test="viewingTime != null" >
        viewing_time = #{viewingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anyoufang.entity.TbBespeak" >
    update tb_bespeak
    set housing_id = #{housingId,jdbcType=VARCHAR},
      renter_id = #{renterId,jdbcType=VARCHAR},
      acc_renter_id = #{accRenterId,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      basic_info = #{basicInfo,jdbcType=VARCHAR},
      viewing_time = #{viewingTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>